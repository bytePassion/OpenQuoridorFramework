<UserControl x:Class="OQF.Visualization.Common.Language.LanguageSelection.LanguageSelectionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"              
             xmlns:viewModel="clr-namespace:OQF.Visualization.Common.Language.LanguageSelection.ViewModel"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:computations="clr-namespace:OQF.Visualization.Common.Language.LanguageSelection.Computations"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters1="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             mc:Ignorable="d" 
             d:DesignHeight="33" d:DesignWidth="50">
	
	<d:DesignData.DataContext>
		<viewModel:LanguageSelectionViewModelSampleData/>
	</d:DesignData.DataContext>

	
	<UserControl.Resources>
		<computations:GetFlagImageFromCountryCode x:Key="GetFlagImageFromCountryCode" />
         <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2 2 2 2"
                                       SnapsToDevicePixels="true"
                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                       StrokeDashArray="1 2"
                                       StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="MaterialDesignFloatingHintComboBoxTemplateBlank" TargetType="{x:Type ComboBox}">
                <Grid x:Name="templateRoot"
                      Background="{TemplateBinding Background}"
                      SnapsToDevicePixels="True">
                    <Grid x:Name="InnerRoot">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="toggleButton"
                                      Grid.ColumnSpan="2"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      IsChecked="{Binding IsDropDownOpen,
                                                          Mode=TwoWay,
                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource MaterialDesignComboBoxToggleButton}" />
                        <Grid Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                            <Grid x:Name="InputRoot" HorizontalAlignment="Left">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  IsHitTestVisible="False" />
                                <TextBox x:Name="PART_EditableTextBox"
                                         HorizontalAlignment="Left"
                                         HorizontalContentAlignment="Stretch"
                                         CaretBrush="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                              Path=BorderBrush}"
                                         IsReadOnly="{Binding IsReadOnly,
                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                         Style="{StaticResource MaterialDesignComboBoxEditableTextBox}"
                                         Visibility="Collapsed" />

                                <materialDesign:SmartHint x:Name="Hint"
                                                          FontSize="{TemplateBinding FontSize}"
                                                          Hint="{TemplateBinding materialDesign:HintAssist.Hint}"
                                                          HintOpacity="{Binding Path=(materialDesign:HintAssist.HintOpacity),
                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                          HintProxy="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                                              Converter={x:Static converters1:HintProxyFabricConverter.Instance}}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          UseFloating="{Binding Path=(materialDesign:HintAssist.IsFloating),
                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                          UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
                            </Grid>
                        </Grid>
                        <materialDesign:Underline x:Name="Underline"
                                                  Grid.ColumnSpan="2"
                                                  IsActive="{Binding ElementName=PART_EditableTextBox,
                                                                     Path=IsKeyboardFocused}"
                                                  Visibility="{Binding Path=(materialDesign:TextFieldAssist.DecorationVisibility),
                                                                       RelativeSource={RelativeSource TemplatedParent}}" />

                        <materialDesign:ComboBoxPopup x:Name="PART_Popup"
                                                      AllowsTransparency="true"
                                                      DefaultContentTemplate="{StaticResource PopupContentDefaultTemplate}"
                                                      DefaultVerticalOffset="5"
                                                      DownContentTemplate="{StaticResource PopupContentDownTemplate}"
                                                      DownVerticalOffset="-15.5"
                                                      Focusable="False"
                                                      HorizontalOffset="-11.5"
                                                      IsOpen="{Binding IsDropDownOpen,
                                                                       Mode=TwoWay,
                                                                       RelativeSource={RelativeSource TemplatedParent}}"
                                                      Placement="Custom"
                                                      PlacementTarget="{Binding ElementName=templateRoot}"
                                                      PopupAnimation="Fade"
                                                      SnapsToDevicePixels="True"
                                                      UpContentTemplate="{StaticResource PopupContentUpTemplate}"
                                                      UpVerticalOffset="15"
                                                      UseLayoutRounding="True"
                                                      VerticalOffset="0">
                            <ContentControl>
                                <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}" Background="{Binding Background, ElementName=PART_Popup}">
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </ContentControl>
                        </materialDesign:ComboBoxPopup>
                    </Grid>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="templateRoot" Property="Opacity" Value="0.56" />
                    </Trigger>
                    <Trigger Property="IsEditable" Value="True">
                        <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                        <Setter TargetName="Underline" Property="Visibility" Value="{Binding Path=(materialDesign:TextFieldAssist.DecorationVisibility), RelativeSource={RelativeSource TemplatedParent}}" />
                        <Setter TargetName="contentPresenter" Property="Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="materialDesign:HintAssist.IsFloating" Value="True">
                        <Setter TargetName="InnerRoot" Property="Margin" Value="0 11.5 0 0" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsEditable" Value="False" />
                            <Condition Property="IsDropDownOpen" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter TargetName="Underline" Property="Visibility" Value="Hidden" />
                        <Setter TargetName="toggleButton" Property="Visibility" Value="Hidden" />
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition SourceName="Hint" Property="IsContentNullOrEmpty" Value="False" />
                            <Condition Property="IsKeyboardFocused" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter TargetName="Hint" Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                        <Setter TargetName="Hint" Property="HintOpacity" Value="1" />
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition SourceName="Hint" Property="IsContentNullOrEmpty" Value="False" />
                            <Condition SourceName="PART_EditableTextBox" Property="IsKeyboardFocused" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter TargetName="Hint" Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                        <Setter TargetName="Hint" Property="HintOpacity" Value="1" />
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition SourceName="Hint" Property="IsContentNullOrEmpty" Value="False" />
                            <Condition Property="IsDropDownOpen" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter TargetName="Hint" Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                        <Setter TargetName="Hint" Property="HintOpacity" Value="1" />
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping" Value="true" />
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                    </MultiTrigger>
                    <Trigger Property="IsKeyboardFocused" Value="true">
                        <Setter TargetName="Underline" Property="IsActive" Value="True" />
                    </Trigger>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}" />
                        <Setter TargetName="Underline" Property="Background" Value="{DynamicResource ValidationErrorBrush}" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="true" />
                            <Condition Property="Validation.HasError" Value="true" />
                        </MultiTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}" />
                        <Setter TargetName="Underline" Property="Background" Value="{DynamicResource ValidationErrorBrush}" />
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="true" />
                            <Condition Property="Validation.HasError" Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                        <Setter TargetName="Underline" Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
                    </MultiTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>




            <ControlTemplate x:Key="PopupContentDefaultTemplate" TargetType="ContentControl">
                <Grid MinWidth="{Binding ElementName=templateRoot, Path=ActualWidth, Converter={StaticResource MathAddConverter}, ConverterParameter=32}" Margin="6">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Border Background="Transparent"
                            BorderBrush="{DynamicResource MaterialDesignShadowBrush}"
                            BorderThickness="1"
                            CornerRadius="2">
                        <Border.Effect>
                            <BlurEffect Radius="6" />
                        </Border.Effect>
                    </Border>
                    <Grid Margin="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0"
                                Height="{StaticResource PopupTopBottomMargin}"
                                Background="{Binding ElementName=PART_Popup,
                                                     Path=Background}"
                                CornerRadius="2 2 0 0" />

                        <ContentPresenter Grid.Row="1" />

                        <Border Grid.Row="2"
                                Height="{StaticResource PopupTopBottomMargin}"
                                Background="{Binding ElementName=PART_Popup,
                                                     Path=Background}"
                                CornerRadius="0 0 2 2" />
                    </Grid>
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="MaterialDesignComboBoxItemTemplateBlank" TargetType="{x:Type ComboBoxItem}">
                <Grid x:Name="GridWrapper">
                    <Border x:Name="BackBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true" />

                    <Border x:Name="MouseOverBorder"
                            Background="{TemplateBinding Foreground,
                                                         Converter={StaticResource BrushRoundConverter}}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0"
                            SnapsToDevicePixels="true" />
                    <materialDesign:Ripple HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch"
                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Content="{TemplateBinding Content}"
                                           ContentTemplate="{TemplateBinding ContentTemplate}"
                                           ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                           Feedback="{TemplateBinding Foreground,
                                                                      Converter={StaticResource BrushRoundConverter}}"
                                           Focusable="False"
                                           Padding="{TemplateBinding Padding}"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup Name="CommonStates">
                            <VisualStateGroup.Transitions>
                                <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                    <VisualTransition.GeneratedEasingFunction>
                                        <CircleEase EasingMode="EaseOut" />
                                    </VisualTransition.GeneratedEasingFunction>
                                </VisualTransition>
                            </VisualStateGroup.Transitions>
                            <VisualState Name="Normal" />
                            <VisualState Name="MouseOver">
                                <Storyboard>
                                    <DoubleAnimation Duration="0"
                                                     Storyboard.TargetName="MouseOverBorder"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0.1" />
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
    
                        <VisualStateGroup Name="FocusStates">
                            <VisualStateGroup.Transitions>
                                <VisualTransition GeneratedDuration="0:0:0.3" To="Unfocused" />
                            </VisualStateGroup.Transitions>
                            <VisualState Name="Focused">
                                <Storyboard>
                                    <DoubleAnimation Duration="0"
                                                     Storyboard.TargetName="MouseOverBorder"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0.1" />
                                </Storyboard>
                            </VisualState>
                            <VisualState Name="Unfocused" />
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="GridWrapper" Property="Opacity" Value="0.56" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="Tag" Value="1.0" />
                            <Condition Property="IsSelected" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Height" Value="0" />
                    </MultiTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="MaterialDesignComboBoxItemStyleBlank" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Padding" Value="16 8" />
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                <Setter Property="Template" Value="{StaticResource MaterialDesignComboBoxItemTemplateBlank}" />
            </Style>

            <Style x:Key="MaterialDesignComboBoxItemSelectedCollapsedStyleBlank"
                   BasedOn="{StaticResource MaterialDesignComboBoxItemStyleBlank}"
                   TargetType="{x:Type ComboBoxItem}">
                <Setter Property="Tag" Value="1.0" />
            </Style>

            <Style x:Key="MaterialDesignComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="ClickMode" Value="Press" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid>
                                <Border x:Name="ToggleTemplateRoot"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <Border x:Name="splitBorder"
                                            Margin="0"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            BorderBrush="Transparent"
                                            BorderThickness="0" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ToggleTemplateRoot" Property="BorderBrush" Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ToggleTemplateRoot" Property="BorderBrush" Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
                                    <Setter TargetName="splitBorder" Property="BorderBrush" Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MaterialDesignComboBoxBlank" TargetType="{x:Type ComboBox}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource MaterialDesignComboBoxItemSelectedCollapsedStyleBlank}" />
                <Setter Property="Template" Value="{StaticResource MaterialDesignFloatingHintComboBoxTemplateBlank}" />
                <Style.Triggers>
                    <Trigger Property="IsKeyboardFocused" Value="true">
                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="true">
                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                    </Trigger>
                    <Trigger Property="IsEditable" Value="true">
                        <Setter Property="IsTabStop" Value="false" />
                        <!--  designer prefers hard bool  -->
                        <Setter Property="materialDesign:ComboBoxAssist.ShowSelectedItem" Value="True" />
                    </Trigger>
                    <!--  designer prefers hard bool  -->
                    <Trigger Property="materialDesign:ComboBoxAssist.ShowSelectedItem" Value="True">
                        <Setter Property="ItemContainerStyle" Value="{StaticResource MaterialDesignComboBoxItemStyleBlank}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="MaterialDesignFloatingHintComboBox"
                   BasedOn="{StaticResource MaterialDesignComboBoxBlank}"
                   TargetType="{x:Type ComboBox}">
                <Setter Property="materialDesign:HintAssist.IsFloating" Value="True" />
            </Style>
	</UserControl.Resources>
	
	<ComboBox Margin="4,0"              
              ItemsSource="{Binding AvailableCountryCodes}"
              SelectedValue="{Binding SelectedCountryCode,
                                      Mode=TwoWay,
                                      UpdateSourceTrigger=PropertyChanged}">
		<ComboBox.Style>
			<Style BasedOn="{StaticResource MaterialDesignComboBoxBlank}" TargetType="{x:Type ComboBox}">
				<Setter Property="BorderThickness" Value="0 0 0 0" />

			</Style>
		</ComboBox.Style>
		<ComboBox.Resources>
			<system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">0</system:Double>
		</ComboBox.Resources>

		<ComboBox.ItemTemplate>
			<DataTemplate DataType="system:String">
				<Image Width="40"
                       Height="25"						   
                       Source="{Binding Converter={StaticResource GetFlagImageFromCountryCode}}" />

			</DataTemplate>
		</ComboBox.ItemTemplate>

	</ComboBox>
</UserControl>
