<Window x:Class="OQF.Visualization.Common.Info.InfoWindow.InfoWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:panels="clr-namespace:Lib.Wpf.Panels;assembly=Lib.Wpf"
        xmlns:viewModel="clr-namespace:OQF.Visualization.Common.Info.InfoWindow.ViewModel"
        xmlns:pages="clr-namespace:OQF.Visualization.Common.Info.Pages"
        xmlns:helper="clr-namespace:OQF.Visualization.Common.Info.InfoWindow.ViewModel.Helper"
        xmlns:languageSelection="clr-namespace:OQF.Visualization.Common.Language.LanguageSelection"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
        MinWidth="800"
        MinHeight="400"
        d:DesignHeight="700"
        d:DesignWidth="700"
        Background="{DynamicResource MaterialDesignFlatButtonClick}"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        TextElement.FontSize="12"
        TextElement.FontWeight="Medium"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        WindowStartupLocation="CenterOwner"
        WindowStyle="ToolWindow"
        mc:Ignorable="d">
    
    <Window.Resources>
        <Style x:Key="MaterialInfoToglleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth1" />
            <Setter Property="TextBlock.FontWeight" Value="Medium"/>
            <Setter Property="TextBlock.FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16 4 16 4"/>
            <Setter Property="Height" Value="32" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                                <Border Background="{TemplateBinding Background}" CornerRadius="2"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    x:Name="border"
                                    Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ShadowAssist.ShadowDepth), Converter={x:Static converters:ShadowConverter.Instance}}">
                                </Border>
                            <ContentControl Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"     
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Padding="{TemplateBinding Padding}" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentControl.Template>
                                    <ControlTemplate TargetType="{x:Type ContentControl}">
                                        <ContentPresenter Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ControlTemplate>
                                </ContentControl.Template>
                            </ContentControl>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="materialDesign:ShadowAssist.Darken" Value="True" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

	<d:DesignData.DataContext>
		<viewModel:InfoWindowViewModelSampleData/>
    </d:DesignData.DataContext>

    <Grid Margin="0,30,0,0">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="45" />
        </Grid.RowDefinitions>

        <ItemsControl Grid.RowSpan="2"
                      Grid.Column="0"
                      ItemsSource="{Binding PageSelectionCommands}">

			<ItemsControl.Resources>
				<Style TargetType="ToggleButton">
					
				</Style>
			</ItemsControl.Resources>
			
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="helper:SelectionButtonData">
                    <ToggleButton Margin="5"
								  Height="30"
                                  Style="{StaticResource MaterialInfoToglleButton}"
								  IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								  Content="{Binding ButtonCaption}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>

        </ItemsControl>

        <panels:DeckPanel Grid.Row="0"
                          Grid.Column="1"
                          SelectedLayer="{Binding SelectedPage}">

            <pages:QuoridorRules               DataContext="{Binding QuoridorRulesPageViewModel}"   />
            <pages:QuoridorNotation            DataContext="{Binding QuoridorNotationPageViewModel}"/>
            <pages:HowToWriteABot              DataContext="{Binding HowToWriteABotPageViewModel}"  />
            <pages:ReplayViewerApplicationInfo DataContext="{Binding ReplayViewerInfoPageViewModel}"/>
            <pages:PlayerVsBotApplicationInfo  DataContext="{Binding PlayerVsBotInfoPageViewModel}" />
            <pages:BotVsBotApplicationInfo     DataContext="{Binding BotVsBotInfoPageViewModel}"    />
            <pages:TurnamentApplicationInfo    DataContext="{Binding TurnamentInfoPageViewModel}"   />
            <pages:About                       DataContext="{Binding AboutPageViewModel}"           />

        </panels:DeckPanel>

        <Button Grid.Row="1"
                Grid.Column="1"
                Width="100"
                Margin="5"
                HorizontalAlignment="Right"
                Command="{Binding CloseWindow}"
                Content="{Binding CloseButtonCaption}"/>
		
		<languageSelection:LanguageSelectionView Grid.Row="1"
												 Grid.Column="0"
												 HorizontalAlignment="Center"
												 VerticalAlignment="Center"
												 DataContext="{Binding LanguageSelectionViewModel}"/>

    </Grid>
</Window>
