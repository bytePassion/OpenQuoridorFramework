<Window x:Class="OQF.Visualization.Common.Info.InfoWindow.InfoWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:aboutPage="clr-namespace:OQF.Visualization.Common.Info.Pages.PageViewModels.AboutPage"
        xmlns:botVsBotInfoPage="clr-namespace:OQF.Visualization.Common.Info.Pages.PageViewModels.BotVsBotInfoPage"
        xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:helper="clr-namespace:OQF.Visualization.Common.Info.InfoWindow.ViewModel.Helper"
        xmlns:howToWriteABotPage="clr-namespace:OQF.Visualization.Common.Info.Pages.PageViewModels.HowToWriteABotPage"
        xmlns:languageSelection="clr-namespace:OQF.Visualization.Common.Language.LanguageSelection"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:pages="clr-namespace:OQF.Visualization.Common.Info.Pages"
        xmlns:panels="clr-namespace:Lib.Wpf.Panels;assembly=Lib.Wpf"
        xmlns:playerVsBotInfoPage="clr-namespace:OQF.Visualization.Common.Info.Pages.PageViewModels.PlayerVsBotInfoPage"
        xmlns:quoridorNotationPage="clr-namespace:OQF.Visualization.Common.Info.Pages.PageViewModels.QuoridorNotationPage"
        xmlns:quoridorRulesPage="clr-namespace:OQF.Visualization.Common.Info.Pages.PageViewModels.QuoridorRulesPage"
        xmlns:replayViewerInfoPage="clr-namespace:OQF.Visualization.Common.Info.Pages.PageViewModels.ReplayViewerInfoPage"
        xmlns:turnamentInfoPage="clr-namespace:OQF.Visualization.Common.Info.Pages.PageViewModels.TurnamentInfoPage"
        xmlns:viewModel="clr-namespace:OQF.Visualization.Common.Info.InfoWindow.ViewModel"
        MinWidth="800"
        MinHeight="400"
        d:DesignHeight="700"
        d:DesignWidth="700"
        Background="{DynamicResource MaterialDesignFlatButtonClick}"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        TextElement.FontSize="12"
        TextElement.FontWeight="Medium"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        WindowStartupLocation="CenterOwner"
        WindowStyle="ToolWindow"
        mc:Ignorable="d">

    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="MaterialInfoToglleButton" TargetType="{x:Type ToggleButton}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth1" />
                <Setter Property="TextBlock.FontWeight" Value="Medium" />
                <Setter Property="TextBlock.FontSize" Value="14" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="16 4 16 4" />
                <Setter Property="Height" Value="32" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid>
                                <Border x:Name="border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="2"
                                        Effect="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                         Path=(materialDesign:ShadowAssist.ShadowDepth),
                                                         Converter={x:Static converters:ShadowConverter.Instance}}" />
                                <ContentControl HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Focusable="False"
                                                Padding="{TemplateBinding Padding}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ContentControl.Template>
                                        <ControlTemplate TargetType="{x:Type ContentControl}">
                                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              Content="{TemplateBinding Content}"
                                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </ControlTemplate>
                                    </ContentControl.Template>
                                </ContentControl>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="materialDesign:ShadowAssist.Darken" Value="True" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value="0.23" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <DataTemplate DataType="{x:Type aboutPage:AboutPageViewModel}">
                <pages:About />
            </DataTemplate>
            <DataTemplate DataType="{x:Type quoridorRulesPage:QuoridorRulesPageViewModel}">
                <pages:QuoridorRules />
            </DataTemplate>
            <DataTemplate DataType="{x:Type quoridorNotationPage:QuoridorNotationPageViewModel}">
                <pages:QuoridorNotation />
            </DataTemplate>
            <DataTemplate DataType="{x:Type botVsBotInfoPage:BotVsBotInfoPageViewModel}">
                <pages:BotVsBotApplicationInfo />
            </DataTemplate>
            <DataTemplate DataType="{x:Type playerVsBotInfoPage:PlayerVsBotInfoPageViewModel}">
                <pages:PlayerVsBotApplicationInfo />
            </DataTemplate>
            <DataTemplate DataType="{x:Type howToWriteABotPage:HowToWriteABotPageViewModel}">
                <pages:HowToWriteABot />
            </DataTemplate>
            <DataTemplate DataType="{x:Type replayViewerInfoPage:ReplayViewerInfoPageViewModel}">
                <pages:ReplayViewerApplicationInfo />
            </DataTemplate>
            <DataTemplate DataType="{x:Type turnamentInfoPage:TurnamentInfoPageViewModel}">
                <pages:TurnamentApplicationInfo />
            </DataTemplate>
        </ResourceDictionary>

    </Window.Resources>

    <d:DesignData.DataContext>
        <viewModel:InfoWindowViewModelSampleData />
    </d:DesignData.DataContext>

    <Grid Margin="0,30,0,0"
          Background="{DynamicResource MaterialDesignFlatButtonClick}"
          ZIndex="99">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="45" />
        </Grid.RowDefinitions>

        <ListBox x:Name="Pages"
                 Grid.RowSpan="2"
                 Grid.Column="0"
                 DisplayMemberPath="DisplayName"
                 FontSize="18"
                 ItemsSource="{Binding Pages}"
                 SelectedIndex="0">

            <ListBox.Resources>
                <Style TargetType="ToggleButton" />
            </ListBox.Resources>

            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>

        </ListBox>

        <Border Grid.Row="0"
                Grid.Column="1"
                Background="{DynamicResource MaterialDesignFlatButtonClick}">
            <ContentControl Content="{Binding ElementName=Pages, Path=SelectedItem}" />
        </Border>

        <languageSelection:LanguageSelectionView Grid.Row="1"
                                                 Grid.Column="0"
                                                 HorizontalAlignment="Center"
                                                 VerticalAlignment="Center"
                                                 DataContext="{Binding LanguageSelectionViewModel}" />

        <Button Grid.Row="1"
                Grid.Column="1"
                Width="100"
                Margin="5"
                HorizontalAlignment="Right"
                Command="{Binding CloseWindow}"
                Content="{Binding CloseButtonCaption}" />

    </Grid>
</Window>
