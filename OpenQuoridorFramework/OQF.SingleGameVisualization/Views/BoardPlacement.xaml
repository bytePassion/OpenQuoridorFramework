<UserControl x:Class="OQF.SingleGameVisualization.Views.BoardPlacement"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:commandExecutingBehaviors="clr-namespace:WpfLib.CommandExecutingBehaviors;assembly=WpfLib"
             xmlns:boardPlacement="clr-namespace:OQF.SingleGameVisualization.ViewModels.BoardPlacement"
             xmlns:computation="clr-namespace:OQF.SingleGameVisualization.Computation"
             xmlns:behaviors="clr-namespace:OQF.SingleGameVisualization.Behaviors"
             xmlns:local="clr-namespace:OQF.SingleGameVisualization.Views"
             xmlns:global="clr-namespace:OQF.SingleGameVisualization.Global"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
	
	<d:DesignData.DataContext>
		<boardPlacement:BoardPlacementViewModelSampleData/>
	</d:DesignData.DataContext>

	<UserControl.Resources>
		<computation:ComputeFigureLeftPosition x:Key="ComputeFigureLeftPosition" />
		<computation:ComputeFigureTopPosition  x:Key="ComputeFigureTopPosition" />
		<computation:ComputeFigureHeight       x:Key="ComputeFigureHeight" />
		<computation:ComputeFigureWidth        x:Key="ComputeFigureWidth" />
		<computation:ComputeWallLeftPosition   x:Key="ComputeWallLeftPosition" />
		<computation:ComputeWallTopPosition    x:Key="ComputeWallTopPosition" />
		<computation:ComputeWallHeight         x:Key="ComputeWallHeight" />
		<computation:ComputeWallWidth          x:Key="ComputeWallWidth" />
	</UserControl.Resources>

	<Border Background="Transparent">

		<i:Interaction.Behaviors>
			<behaviors:SizeReportingBehavior ReportedSize="{Binding BoardSize, 
																	Mode=OneWayToSource, 
																	UpdateSourceTrigger=PropertyChanged}" />
			<behaviors:ReportRelativeMousePositionBehavior MousePosition="{Binding MousePosition,
																				   Mode=OneWayToSource,
																				   UpdateSourceTrigger=PropertyChanged}"/>

			<commandExecutingBehaviors:ExecuteCommandOnClickBehavior Command="{Binding BoardClick}"/>
		</i:Interaction.Behaviors>

		<Grid>
			
			<ListBox Background="Transparent"
                     ItemsSource="{Binding PossibleMoves}"
                     Padding="-1"
					 IsHitTestVisible="False">

				<ListBox.ItemsPanel>
					<ItemsPanelTemplate>
						<Canvas />
					</ItemsPanelTemplate>
				</ListBox.ItemsPanel>

				<!--  ReSharper disable Xaml.BindingWithContextNotResolved  -->
				<ListBox.ItemContainerStyle>
					<Style TargetType="ListBoxItem">
						<Setter Property="Padding" Value="0" />
						<Setter Property="Margin" Value="0" />
						<Setter Property="Canvas.Left">
							<Setter.Value>
								<MultiBinding Converter="{StaticResource ComputeFigureLeftPosition}">
									<Binding />
									<Binding Path="DataContext.BoardSize" RelativeSource="{RelativeSource AncestorType={x:Type local:BoardPlacement}}" />
								</MultiBinding>
							</Setter.Value>
						</Setter>

						<Setter Property="Canvas.Top">
							<Setter.Value>
								<MultiBinding Converter="{StaticResource ComputeFigureTopPosition}">
									<Binding />
									<Binding Path="DataContext.BoardSize" RelativeSource="{RelativeSource AncestorType={x:Type local:BoardPlacement}}" />
								</MultiBinding>
							</Setter.Value>
						</Setter>

						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate>

									<Ellipse Fill="{x:Static global:Constants.PossibleMoveFieldColor}" >

										<Ellipse.Width>
											<MultiBinding Converter="{StaticResource ComputeFigureWidth}">
												<Binding />
												<Binding Path="DataContext.BoardSize" RelativeSource="{RelativeSource AncestorType={x:Type local:BoardPlacement}}" />
											</MultiBinding>
										</Ellipse.Width>

										<Ellipse.Height>
											<MultiBinding Converter="{StaticResource ComputeFigureHeight}">
												<Binding />
												<Binding Path="DataContext.BoardSize" RelativeSource="{RelativeSource AncestorType={x:Type local:BoardPlacement}}" />
											</MultiBinding>
										</Ellipse.Height>

									</Ellipse>

								</ControlTemplate>
							</Setter.Value>
						</Setter>

					</Style>
				</ListBox.ItemContainerStyle>
				<!--  ReSharper restore Xaml.BindingWithContextNotResolved  -->

			</ListBox>

			<ListBox Background="Transparent"
                     BorderThickness="0"
                     Padding="-1"
					 IsHitTestVisible="False"
                     ItemsSource="{Binding PotentialPlacedWall}">
				<ListBox.ItemsPanel>
					<ItemsPanelTemplate>
						<Canvas />
					</ItemsPanelTemplate>
				</ListBox.ItemsPanel>

				<!--  ReSharper disable Xaml.BindingWithContextNotResolved  -->
				<ListBox.ItemContainerStyle>
					<Style TargetType="ListBoxItem">
						<Setter Property="Padding" Value="0" />
						<Setter Property="Margin" Value="0" />
						<Setter Property="Canvas.Left">
							<Setter.Value>
								<MultiBinding Converter="{StaticResource ComputeWallLeftPosition}">
									<Binding />
									<Binding Path="DataContext.BoardSize" RelativeSource="{RelativeSource AncestorType={x:Type local:BoardPlacement}}" />
								</MultiBinding>
							</Setter.Value>
						</Setter>

						<Setter Property="Canvas.Top">
							<Setter.Value>
								<MultiBinding Converter="{StaticResource ComputeWallTopPosition}">
									<Binding />
									<Binding Path="DataContext.BoardSize" RelativeSource="{RelativeSource AncestorType={x:Type local:BoardPlacement}}" />
								</MultiBinding>
							</Setter.Value>
						</Setter>

						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate>

									<Rectangle Fill="{x:Static global:Constants.PotentialPlacedWallColor}">

										<Rectangle.Width>
											<MultiBinding Converter="{StaticResource ComputeWallWidth}">
												<Binding />
												<Binding Path="DataContext.BoardSize" RelativeSource="{RelativeSource AncestorType={x:Type local:BoardPlacement}}" />
											</MultiBinding>
										</Rectangle.Width>

										<Rectangle.Height>
											<MultiBinding Converter="{StaticResource ComputeWallHeight}">
												<Binding />
												<Binding Path="DataContext.BoardSize" RelativeSource="{RelativeSource AncestorType={x:Type local:BoardPlacement}}" />
											</MultiBinding>
										</Rectangle.Height>

									</Rectangle>

								</ControlTemplate>
							</Setter.Value>
						</Setter>

					</Style>
				</ListBox.ItemContainerStyle>
				<!--  ReSharper restore Xaml.BindingWithContextNotResolved  -->

			</ListBox>
		</Grid>

	</Border>
</UserControl>
