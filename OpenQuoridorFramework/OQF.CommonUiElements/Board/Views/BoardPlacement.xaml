<UserControl x:Class="OQF.CommonUiElements.Board.Views.BoardPlacement"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:libBehaviors="clr-namespace:Lib.Wpf.Behaviors;assembly=Lib.Wpf"
             xmlns:boardColors="clr-namespace:OQF.CommonUiElements.Board.BoardColors;assembly=OQF.CommonUiElements"
             xmlns:commandExecutingBehaviors="clr-namespace:Lib.Wpf.CommandExecutingBehaviors;assembly=Lib.Wpf"            
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"             
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"             
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:gameElements="clr-namespace:OQF.Bot.Contracts.GameElements;assembly=OQF.Bot.Contracts"
             xmlns:boardPlacement="clr-namespace:OQF.CommonUiElements.Board.ViewModels.BoardPlacement"
             xmlns:behaviors="clr-namespace:OQF.CommonUiElements.Board.Behaviors"
             xmlns:computations="clr-namespace:OQF.CommonUiElements.Board.Computations"
             d:DesignHeight="300"
             d:DesignWidth="300"
             mc:Ignorable="d">

	<d:DesignData.DataContext>
		<boardPlacement:BoardPlacementViewModelSampleData />
	</d:DesignData.DataContext>

	<UserControl.Resources>
		<computations:ComputeFigureLeftPosition x:Key="ComputeFigureLeftPosition" />
		<computations:ComputeFigureTopPosition x:Key="ComputeFigureTopPosition" />
		<computations:ComputeFigureHeight x:Key="ComputeFigureHeight" />
		<computations:ComputeFigureWidth x:Key="ComputeFigureWidth" />
		<computations:ComputeWallLeftPosition x:Key="ComputeWallLeftPosition" />
		<computations:ComputeWallTopPosition x:Key="ComputeWallTopPosition" />
		<computations:ComputeWallHeight x:Key="ComputeWallHeight" />
		<computations:ComputeWallWidth x:Key="ComputeWallWidth" />
	</UserControl.Resources>

	<Border Background="Transparent">

		<i:Interaction.Behaviors>
			<libBehaviors:SizeReportingBehavior ReportedSize="{Binding BoardSize, 
																	   Mode=OneWayToSource, 
																	   UpdateSourceTrigger=PropertyChanged}" />
			
			<behaviors:ReportRelativeMousePositionBehavior MousePosition="{Binding MousePosition, 
																				   Mode=OneWayToSource, 
																				   UpdateSourceTrigger=PropertyChanged}"/>
			
			<commandExecutingBehaviors:ExecuteCommandOnClickBehavior Command="{Binding BoardClick}" />
		</i:Interaction.Behaviors>

		<Grid>

			<ItemsControl Name="PossibleMovesBox"
						  Background="Transparent"
						  IsHitTestVisible="False"
						  ItemsSource="{Binding PossibleMoves}">

				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<Canvas />
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>

				<!--  ReSharper disable Xaml.BindingWithContextNotResolved  -->
				<ItemsControl.ItemContainerStyle>
					<Style TargetType="ContentPresenter">
						<Setter Property="Margin" Value="2,2,0,0" />
						<Setter Property="Canvas.Left">
							<Setter.Value>
								<MultiBinding Converter="{StaticResource ComputeFigureLeftPosition}">
									<Binding />
									<Binding ElementName="PossibleMovesBox" Path="DataContext.BoardSize" />
								</MultiBinding>
							</Setter.Value>
						</Setter>

						<Setter Property="Canvas.Top">
							<Setter.Value>
								<MultiBinding Converter="{StaticResource ComputeFigureTopPosition}">
									<Binding />
									<Binding ElementName="PossibleMovesBox" Path="DataContext.BoardSize" />
								</MultiBinding>
							</Setter.Value>
						</Setter>

						<Setter Property="ContentTemplate">
							<Setter.Value>
								<DataTemplate DataType="gameElements:PlayerState">

									<Ellipse Fill="{x:Static boardColors:Brushes.PossibleMoveFieldColor}">

										<Ellipse.Width>
											<MultiBinding Converter="{StaticResource ComputeFigureWidth}">
												<Binding />
												<Binding ElementName="PossibleMovesBox" Path="DataContext.BoardSize" />
											</MultiBinding>
										</Ellipse.Width>

										<Ellipse.Height>
											<MultiBinding Converter="{StaticResource ComputeFigureHeight}">
												<Binding />
												<Binding ElementName="PossibleMovesBox" Path="DataContext.BoardSize" />
											</MultiBinding>
										</Ellipse.Height>

									</Ellipse>

								</DataTemplate>
							</Setter.Value>
						</Setter>

					</Style>
				</ItemsControl.ItemContainerStyle>
				<!--  ReSharper restore Xaml.BindingWithContextNotResolved  -->

			</ItemsControl>

			<ItemsControl Name="PotentialWallBox"
                          Background="Transparent"                          
                          IsHitTestVisible="False"
                          ItemsSource="{Binding PotentialPlacedWall}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<Canvas />
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>

				<!--  ReSharper disable Xaml.BindingWithContextNotResolved  -->
				<ItemsControl.ItemContainerStyle>
					<Style TargetType="ContentPresenter">
						<Setter Property="Canvas.Left">
							<Setter.Value>
								<MultiBinding Converter="{StaticResource ComputeWallLeftPosition}">
									<Binding />
									<Binding ElementName="PotentialWallBox" Path="DataContext.BoardSize" />
								</MultiBinding>
							</Setter.Value>
						</Setter>

						<Setter Property="Canvas.Top">
							<Setter.Value>
								<MultiBinding Converter="{StaticResource ComputeWallTopPosition}">
									<Binding />
									<Binding ElementName="PotentialWallBox" Path="DataContext.BoardSize" />
								</MultiBinding>
							</Setter.Value>
						</Setter>

						<Setter Property="ContentTemplate">
							<Setter.Value>
								<DataTemplate DataType="gameElements:Wall">

									<Rectangle Fill="{x:Static boardColors:Brushes.PotentialPlacedWallColor}">

										<Rectangle.Width>
											<MultiBinding Converter="{StaticResource ComputeWallWidth}">
												<Binding />
												<Binding ElementName="PotentialWallBox" Path="DataContext.BoardSize" />
											</MultiBinding>
										</Rectangle.Width>

										<Rectangle.Height>
											<MultiBinding Converter="{StaticResource ComputeWallHeight}">
												<Binding />
												<Binding ElementName="PotentialWallBox" Path="DataContext.BoardSize" />
											</MultiBinding>
										</Rectangle.Height>

									</Rectangle>

								</DataTemplate>
							</Setter.Value>
						</Setter>

					</Style>
				</ItemsControl.ItemContainerStyle>
				<!--  ReSharper restore Xaml.BindingWithContextNotResolved  -->

			</ItemsControl>
		</Grid>

	</Border>
</UserControl>